spring:
  application:
    name:spring-demo
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/scottdb?serverTimezone=UTC&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
    username: scott
    password: tiger
  jpa:
    hibernate:
      ddl-auto: update # DDL(create, alter, drop) 정의 시 DB의 고유 기능을 사용할 수 있음. Update는 없는 경우는 create, 이미 생성된 경우 alter
    properties:
      hibernate:
        show_sql: true # true 설정 시 JPA 쿼리문 확인 가능
        format_sql: true # JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여줌
  servlet:
    multipart:
      location: C:/Users/campus2H052/Desktop/upload
      enabled: true
      max-request-size: 30MB
      max-file-size: 10MB
  messages:
    encoding: UTF-8
    basename: messages/messages
  batch:
    job:
      enable: false #서버 재시작시 배치 자동실행 방지
    jdbc:
      initialize-schema: always

upload:
  path: C:/Users/campus2H052/Desktop/upload


server:
  port: 8080

logging:
  structured:
    enabled: true
    format:
      console: com.example.springdemo.util.MyCustomFormat

management:
  server:
    port: 8080 #본인이 사용하는 포트 번호 넣어주기
  endpoints:
    web:
      base-path: /management
      exposure:
        include: "*" #엔드포인트 노출 설정(운영 환경에서는 민감 정보 노출을 막기 위해 최소한의 노출)
  endpoint:
    health:
      show-details: always
    env:
      # show-values: alsways # 모든 값을 마스킹 없이 표시(비밀번호,토큰,키 등의 값도 노출되므로 운영 환경에서는 권장하지 않음)
      show-values: WHEN_AUTHORIZED #인증된 사용자에게만 자세한 정보 노출
      keys-to-sanitize:
        - "password"
        - "secret"
        - "key"
        - "token"
        - ".*credentials.*"